# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  DOCKERHUB_USERNAME: fjzhangzzz
  IMAGE_NAME: hello-world

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
#       - name: Enable docker experimental
#         run: |
#           echo "{ \"experimental\": true }" > /etc/docker/daemon.json
#           systemctl daemon-reload && systemctl restart docker
          
      - name: Check out repo
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Extract metadata for Docker
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Build source for linux/amd64
        uses: addnab/docker-run-action@v3
        with:
          registry: docker.io
          image: fjzhangzzz/alpine-gcc:main
          options: -v ${{ github.workspace }}:/work -e BUILD_TYPE=Release --platform=linux/amd64
          run: |
            BUILDDIR=/work/build
            [[ -d ${BUILDDIR} ]] && rm -rf ${BUILDDIR}/* || mkdir -p ${BUILDDIR}
            cd ${BUILDDIR} && cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} .. && make
            
      - name: Build image for amd64
        run: |
          docker build -t ${{ steps.meta.outputs.tags }}-amd64 . && docker push ${{ steps.meta.outputs.tags }}-amd64

      - name: Build source for linux/arm64
        uses: addnab/docker-run-action@v3
        with:
          registry: docker.io
          image: fjzhangzzz/alpine-gcc:main
          options: -v ${{ github.workspace }}:/work -e BUILD_TYPE=Release --platform=linux/arm64
          run: |
            BUILDDIR=/work/build
            [[ -d ${BUILDDIR} ]] && rm -rf ${BUILDDIR}/* || mkdir -p ${BUILDDIR}
            cd ${BUILDDIR} && cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} .. && make
        
      - name: Build image for arm64
        run: |
          docker build -t ${{ steps.meta.outputs.tags }}-arm64 . && docker push ${{ steps.meta.outputs.tags }}-arm64
        
#       - name: Push images
#         run: |
#           FULL_IMAGENAME=${{ steps.meta.outputs.tags }}
#           IMAGENAME_AMD64=${FULL_IMAGENAME/$IMAGENAME/$IMAGENAME-amd64}
#           IMAGENAME_ARM64=${FULL_IMAGENAME/$IMAGENAME/$IMAGENAME-arm64}
#           docker manifest create ${FULL_IMAGENAME} ${IMAGENAME_AMD64} ${IMAGENAME_ARM64}
#           docker manifest annotate --arch amd64 ${{ steps.meta.outputs.tags }} ${IMAGENAME_AMD64}
#           docker manifest annotate --arch arm64 ${{ steps.meta.outputs.tags }} ${IMAGENAME_ARM64}
#           docker manifest push ${FULL_IMAGENAME}
